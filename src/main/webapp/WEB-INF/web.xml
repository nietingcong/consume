<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <welcome-file-list>
    	<welcome-file>MyJsp.jsp</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <!-- 配置session有效时间15分钟 -->
    <session-config>
    	<session-timeout>15</session-timeout>
    </session-config>
    <!-- 配置服务启动时需要加载的spring相关的配置文件 -->
    <context-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>
    		classpath:/applicationContext.xml,
    		classpath:/applicationContext-shiro.xml
    	</param-value>
    </context-param>
    <!-- 启动spring监听器:负责将以上spring配置文件加载到spring上下文中 -->
    <listener>
    	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- 防止内存泄漏 -->
    <listener>
    	<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <!-- 设置请求编码 -->
    <filter>
    	<filter-name>encoding</filter-name>
    	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    	<async-supported>true</async-supported><!-- 同步方式运行？NO -->
    	<init-param>
    		<param-name>encoding</param-name>
    		<param-value>UTF-8</param-value>
    	</init-param>
    </filter>
    <!-- springmvc核心配置 -->
    <servlet>
    	<servlet-name>springmvc</servlet-name>
    	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    	<init-param>
    		<param-name>contextConfigLocation</param-name>
    		<param-value>classpath:/applicationContext-mvc.xml</param-value>
    	</init-param>
    	<load-on-startup>1</load-on-startup>
    </servlet>
    <!-- shiro配置 -->
    <filter>
    	<filter-name>shiroFilter</filter-name>
    	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    	<init-param>
    		<param-name>targetFilterLifecycle</param-name>
    		<param-value>true</param-value>
    	</init-param>
    </filter>
    <!-- 配置OpenSessionInViewFilter 保证session在一次请求完成后才关闭 -->
    <filter>
    	<filter-name>hibernateFilter</filter-name>
    	<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
    	<init-param>
    	<!-- singleSession默认为true,若设为false则等于没用OpenSessionInView 。所以默认可以不写 -->
    		<param-name>singleSession</param-name>
    		<param-value>true</param-value>
    	</init-param>
    	<init-param>
	    	<!-- 
	    	指定org.springframework.orm.hibernate3.LocalSessionFactoryBean在spring配置文件中的名称,默认值为sessionFactory。
	    	 如果LocalSessionFactoryBean在spring中的名称不是sessionFactory,该参数一定要指定,否则会出现找不到sessionFactory的例外。所以默认可以不写
	    	 -->
    		<param-name>sessionFactoryBeanName</param-name>
    		<param-value>sessionFactory</param-value>
    	</init-param>
    	<init-param>
	    	<!-- 
	    	在项目中使用Spring+Hibernate的时候，会开启OpenSessionInViewFilter来阻止延迟加载的错误，
	    	但是在我们开启OpenSessionInViewFilter这个过滤器的时候FlushMode就已经被默认设置为了MANUAL，如果FlushMode是MANUAL或NEVEL,
	    	在操作过程中 hibernate会将事务设置为readonly，若要进行增加、删除或修改操作则需要手动设置flushMode为AUTO
	    	-->
    		<param-name>flushMode</param-name>     
 			<param-value>AUTO</param-value>
    	</init-param>
    	
    </filter>
    
    <filter-mapping>
    	<filter-name>hibernateFilter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping> 
    <filter-mapping>
    	<filter-name>shiroFilter</filter-name>
    	<url-pattern>*.htm</url-pattern>
    	<dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encoding</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>
